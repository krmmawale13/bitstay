// app/gradients/page.tsx
"use client";

import React, { useEffect, useState } from "react";

type Grad = {
  id: number;
  name: string;
  // Ye wahi string hai jo tum components me paste karoge
  classes: string;
  // Card ki styling (preview ke liye) — classes + few UI utilities
  preview?: string;
};

const baseOverlay =
  "before:content-[''] before:absolute before:inset-0 before:pointer-events-none " +
  "before:bg-[linear-gradient(180deg,rgba(255,255,255,0.18)_0%,rgba(255,255,255,0.05)_28%,rgba(255,255,255,0)_60%)] " +
  "before:opacity-60 before:mix-blend-soft-light";

const baseButton =
  "group relative rounded-2xl p-4 shadow-[0_8px_30px_rgba(0,0,0,0.12)] border border-transparent overflow-hidden";

const gradients: Grad[] = [
  {
    id: 1,
    name: "Teal → Blue",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-teal-500 to-blue-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 2,
    name: "Indigo → Purple",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-indigo-500 to-purple-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 3,
    name: "Rose → Orange",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-rose-500 to-orange-400 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 4,
    name: "Emerald → Lime",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-emerald-500 to-lime-400 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 5,
    name: "Cyan → Sky",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-cyan-500 to-sky-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 6,
    name: "Amber → Orange",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-amber-400 to-orange-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 7,
    name: "Fuchsia → Pink",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-fuchsia-500 to-pink-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 8,
    name: "Slate → Zinc (Dark)",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-slate-700 to-zinc-900 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 9,
    name: "Violet → Indigo",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-violet-500 to-indigo-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 10,
    name: "Red → Rose",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-red-500 to-rose-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 11,
    name: "Green → Emerald → Teal",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 12,
    name: "Blue → Sky → Cyan",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-blue-500 via-sky-500 to-cyan-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 13,
    name: "Stone → Neutral",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-stone-400 to-neutral-600 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 14,
    name: "Purple → Fuchsia → Pink",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-purple-500 via-fuchsia-500 to-pink-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 15,
    name: "Orange → Amber → Yellow",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-orange-500 via-amber-400 to-yellow-400 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 16,
    name: "Lime → Green → Emerald",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-lime-400 via-green-500 to-emerald-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 17,
    name: "Sky → Cyan → Indigo",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-sky-500 via-cyan-500 to-indigo-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 18,
    name: "Pink → Rose → Red",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-pink-500 via-rose-500 to-red-500 " +
      "dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 " +
      baseOverlay,
  },
  {
    id: 19,
    name: "Monochrome Deep",
    classes:
      "relative px-6 py-3 shadow border-b border-transparent " +
      "bg-gradient-to-r from-zinc-800 via-neutral-900 to-black " +
      "dark:from-black dark:via-neutral-900 dark:to-zinc-800 " +
      baseOverlay,
  },
].map((g) => ({
  ...g,
  preview: [baseButton, g.classes].join(" "),
}));

export default function GradientsPage() {
  const [copiedId, setCopiedId] = useState<number | null>(null);
  const [isDark, setIsDark] = useState<boolean>(false);

  useEffect(() => {
    // Mount par current dark mode detect
    const hasDark = document.documentElement.classList.contains("dark");
    setIsDark(hasDark);
  }, []);

  const toggleDark = () => {
    document.documentElement.classList.toggle("dark");
    setIsDark((d) => !d);
  };

  const handleCopy = async (g: Grad) => {
    try {
      await navigator.clipboard.writeText(`className="${g.classes}"`);
      setCopiedId(g.id);
      setTimeout(() => setCopiedId(null), 1200);
    } catch {
      // fallback
      alert("Copy failed — manually copy from tooltip.");
    }
  };

  return (
    <main className="bg-neutral-50 text-neutral-900 dark:bg-neutral-950 dark:text-neutral-100 min-h-screen">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
        <header className="flex items-center justify-between gap-4 mb-8">
          <div>
            <h1 className="text-2xl sm:text-3xl font-bold tracking-tight">
              CRM Gradient Theme Sampler
            </h1>
            <p className="text-sm text-neutral-600 dark:text-neutral-400 mt-1">
              Card par click karke Tailwind classes copy karein · Dark Mode toggle se preview dekhein.
            </p>
          </div>
          <div className="flex items-center gap-3">
            <button
              onClick={toggleDark}
              className="px-4 py-2 rounded-xl border border-neutral-300 dark:border-neutral-700 hover:bg-neutral-100 dark:hover:bg-neutral-900"
            >
              {isDark ? "Light Mode" : "Dark Mode"}
            </button>
          </div>
        </header>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5">
          {gradients.map((g) => (
            <button
              key={g.id}
              onClick={() => handleCopy(g)}
              className={g.preview}
              aria-label={`Copy classes for ${g.name}`}
              title={`Click to copy: ${g.classes}`}
            >
              <div className="flex items-center justify-between">
                <span className="font-semibold">{g.name}</span>
                <span className="text-xs opacity-80">#{g.id}</span>
              </div>
              <p className="text-xs opacity-90 mt-2 select-text">
                {g.classes.replaceAll("  ", " ")}
              </p>

              {/* Copied toast */}
              <span
                className={`pointer-events-none absolute top-2 right-2 text-xs px-2 py-1 rounded-md bg-emerald-600 text-white transition-opacity ${
                  copiedId === g.id ? "opacity-100" : "opacity-0"
                }`}
              >
                Copied!
              </span>
            </button>
          ))}
        </div>
      </div>
    </main>
  );
}
